---
#
# To use this, just add a new ingress for how you want the service to be
# accessed from the wild, then add a matching config in the haproxy config map
#
---
#
# test ingress
#
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    traefik.ingress.kubernetes.io/router.middlewares:
      traefik-redirecthttps@kubernetescrd
  labels:
    app: haproxy
  name: external-services-test
  namespace: external-services
spec:
  rules:
  - host: external-services-test.app.sierraalpha.co.nz
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: haproxy
            port:
              number: 80
  tls:
  - hosts:
    - external-services-test.app.sierraalpha.co.nz
    secretName: external-services-test-app-sierraalpha-tls
---
#
# homeassistant ingress
#
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    traefik.ingress.kubernetes.io/router.middlewares:
      traefik-redirecthttps@kubernetescrd
  labels:
    app: haproxy
  name: haos
  namespace: external-services
spec:
  rules:
  - host: haos.app.sierraalpha.co.nz
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: haproxy
            port:
              number: 80
  tls:
  - hosts:
    - haos.app.sierraalpha.co.nz
    secretName: haos-app-sierraalpha-tls
---
#
# Config Map
#
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-configmap
data:
  haproxy.cfg: |
    global
      log stdout  format raw  local0  info

    defaults
      log global
      option httplog
      mode tcp
      timeout client 50s
      timeout connect 50s
      timeout server 50s
      timeout http-request 50s

    frontend external_services
      bind :80
      # Add more backends here as needed, to match ingresses above
      use_backend haos_servers if { req.hdr(host) -i haos.app.sierraalpha.co.nz }
      default_backend default_servers

    backend default_servers
      server d-s1 hello-world.app.sierraalpha.co.nz:80

    # Add more backends here as needed, to match ingresses above
    backend haos_servers
      server haos-s1 homeassistant.sierraalpha.co.nz:8123
---
#
# You shouldn't need to modify anything below here
#
---
apiVersion: v1
kind: Service
metadata:
  name: haproxy
  namespace: external-services
spec:
  ports:
    - port: 80
      protocol: TCP
  selector:
    app: haproxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy
  namespace: external-services
spec:
  selector:
    matchLabels:
      app: haproxy
  replicas: 2
  template:
    metadata:
      labels:
        app: haproxy
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: NotIn
                values:
                - rasomniac
                - obsidian
      containers:
        - name: haproxy
          image: haproxy
          ports:
          - containerPort: 80
          volumeMounts:
            - name: haproxy-config
              mountPath: /usr/local/etc/haproxy/haproxy.cfg
              subPath: haproxy.cfg
      volumes:
        - name: haproxy-config
          configMap:
            name: haproxy-configmap

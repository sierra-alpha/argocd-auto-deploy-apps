apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  name: nextcloud
  namespace: argocd
spec:
  destination:
    namespace: nextcloud
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: nextcloud
    repoURL: https://nextcloud.github.io/helm
    targetRevision: 4.6.8
    helm:
      valuesObject:
        # This seems to get hoisted by ArgoCD or k8s I guess it's alphabetical
        # so setting this first means the reference is available below
        #
        affinity: &affinity
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: NotIn
                  values:
                  - rasomniac

        livenessProbe:
          initialDelaySeconds: 120
          failureThreshold: 6
        readinessProbe:
          initialDelaySeconds: 120
          failureThreshold: 6

        nextcloud:
          host: nextcloud.app.sierraalpha.co.nz
          persistence:
            subPath: nextcloud-config
          securityContext:
            runAsUser: 33
            runAsGroup: 33
            runAsNonRoot: true
            readOnlyRootFilesystem: false

          podSecurityContext:
            fsGroup: 33
            # runAsUser: 33
            # runAsGroup: 33
            # runAsNonRoot: true
          # hooks:
          #   post-installation:
          #     configure-redis: |
          #       echo '## Configuring Redis...'
          #       occ config:system:set redis \
          #         host --value="${NC_REDIS_HOST:?"NC_REDIS_HOST is unset"}"
          #       occ config:system:set redis \
          #         password --value="${NC_REDIS_PASS:?"NC_REDIS_PASS is unset"}"
          #       occ config:system:set redis \
          #         port --value="${NC_REDIS_PORT:-6379}"
          #       occ config:system:set memcache.local \
          #         --value="\\OC\\Memcache\\APCu"
          #       occ config:system:set memcache.distributed \
          #         --value="\\OC\\Memcache\\Redis"
          #       occ config:system:set memcache.locking \
          #         --value="\\OC\\Memcache\\Redis"

        ingress:
          enabled: true
          className: traefik
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-production
            kubernetes.io/ingress.class: traefik
            traefik.ingress.kubernetes.io/router.middlewares:
              traefik-redirecthttps@kubernetescrd
          tls:
          - secretName: nextcloud-tls
            hosts:
            - nextcloud.app.sierraalpha.co.nz
        phpClientHttpsFix:
          enabled: true
        cronjob:
          enabled: true
        persistence:
          enabled: true
          existingClaim: nextcloud-config-pvc
          accessMode: ReadWriteMany
          size: 8Gi
          nextcloudData:
            enabled: true
            subPath: nextcloud-data
            existingClaim: nextcloud-storage-pvc
            accessMode: ReadWriteMany
            size: 2Ti

        # redis:
        #   enabled: true
        #   auth:
        #     enabled: true
        #     existingSecret: nextcloud-redis-password
        #     existingSecretPasswordKey: password
        #   master:
        #     affinity: *affinity
        #   replica:
        #     affinity: *affinity

        internalDatabase:
          enabled: false

        externalDatabase:
          enabled: true
          type: postgresql
          existingSecret:
            enabled: true
            secretName: nextcloud-postgresql-password
            usernameKey: username
            passwordKey: password

        postgresql:
          enabled: true
          global:
            postgresql:
              auth:
                existingSecret: nextcloud-postgresql-password
                secretKeys:
                  adminPasswordKey: password
                  userPasswordKey: password
                  replicationPasswordKey: password
          primary:
            persistence:
              enabled: true
              existingClaim: nextcloud-db-pvc
              subPath: nextcloud-db/primary
              accessModes:
                - ReadWriteMany
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: kubernetes.io/hostname
                      operator: NotIn
                      values:
                      - rasomniac
          readReplicas:
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: kubernetes.io/hostname
                      operator: NotIn
                      values:
                      - rasomniac

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - ServerSideApply=true
    - CreateNamespace=true
    retry:
      limit: 5
      backoff:
        duration: 15s
        factor: 2
        maxDuration: 5m

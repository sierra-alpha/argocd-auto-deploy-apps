apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    traefik.ingress.kubernetes.io/router.middlewares:
      traefik-redirecthttps@kubernetescrd
  labels:
    app: tts-server-gpu
  name: tts-server-gpu
  namespace: tts-server
spec:
  rules:
  - host: tts-server-gpu.app.sierraalpha.co.nz
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: tts-server-gpu
            port:
              number: 80
  tls:
  - hosts:
    - tts-server-gpu.app.sierraalpha.co.nz
    secretName: tts-server-gpu-app-sierraalpha-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    traefik.ingress.kubernetes.io/router.middlewares:
      traefik-redirecthttps@kubernetescrd
  labels:
    app: tts-server-cpu
  name: tts-server-cpu
  namespace: tts-server
spec:
  rules:
  - host: tts-server-cpu.app.sierraalpha.co.nz
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: tts-server-cpu
            port:
              number: 80
  tls:
  - hosts:
    - tts-server-cpu.app.sierraalpha.co.nz
    secretName: tts-server-cpu-app-sierraalpha-tls
---
# Service for GPU
apiVersion: v1
kind: Service
metadata:
  name: tts-server-gpu
  namespace: tts-server
spec:
  selector:
    app: tts-server
    type: gpu
  ports:
    - port: 80
      protocol: TCP
      targetPort: 5002
---
# Service for CPU
apiVersion: v1
kind: Service
metadata:
  name: tts-server-cpu
  namespace: tts-server
spec:
  selector:
    app: tts-server
    type: cpu
  ports:
    - port: 80
      protocol: TCP
      targetPort: 5002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tts-server-cpu
  namespace: tts-server
spec:
  selector:
    matchLabels:
      app: tts-server
      type: cpu
  replicas: 1
  template:
    metadata:
      labels:
        app: tts-server
        type: cpu
    spec:
      nodeName: prosomniac
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: NotIn
                values:
                - rasomniac
      containers:
      - name: tts-server-cpu
        image: ghcr.io/idiap/coqui-tts-cpu
        command:
        - '/bin/bash'
        args:
        - '-c'
        - |
          python TTS/server/server.py \
            --model_name tts_models/multilingual/multi-dataset/xtts_v2 \
          || \
            python3 TTS/server/server.py --model_path /root/.local/share/tts/tts_models--multilingual--multi-dataset--xtts_v2 --config_path /root/.local/share/tts/tts_models--multilingual--multi-dataset--xtts_v2/config.json
        ports:
        - containerPort: 5002
        env:
        - name: COQUI_TOS_AGREED
          value: '1'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tts-server-gpu
  namespace: tts-server
spec:
  selector:
    matchLabels:
      app: tts-server
      type: gpu
  replicas: 1
  template:
    metadata:
      labels:
        app: tts-server
        type: gpu
    spec:
      nodeName: taraiwa
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: NotIn
                values:
                - rasomniac
      containers:
      - name: tts-server-gpu
        image: ghcr.io/idiap/coqui-tts
        command:
        - '/bin/bash'
        args:
        - '-c'
        - |
          python TTS/server/server.py \
            --model_name tts_models/multilingual/multi-dataset/xtts_v2 \
          || \
            python3 TTS/server/server.py --model_path /root/.local/share/tts/tts_models--multilingual--multi-dataset--xtts_v2 --config_path /root/.local/share/tts/tts_models--multilingual--multi-dataset--xtts_v2/config.json
        ports:
        - containerPort: 5002
        env:
        - name: COQUI_TOS_AGREED
          value: '1'

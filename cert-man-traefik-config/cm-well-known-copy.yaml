kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: acme-copy-token-role
subjects:
- kind: ServiceAccount
  name: acme-copy-token-role
  namespace: cert-manager
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: acme-copy-token-role
  namespace: cert-manager
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: public-upload-rclone-config
spec:
  itemPath:
    "vaults/K8s Service Account/items/rclone-config-upload-cc-public"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: token-files-cm
data:
  make-token-files.sh: |
    kubectl get -A challenges -o json \
      | jq '
          [
            .items[].spec.token,
            .items[].spec.key
          ]
          |select(. != [])
          | join(" ")
        ' \
      | while read -r token_key
        do
          token_key=( $token_key )
          echo "${token_key[0]}" > "$STAGING_LOCATION/${token_key[1]}"
        done
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: acme-token-cloud-copy-cron
  namespace: cert-manager
spec:
  schedule: "* * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: well-known-acme-token-cloud-copy
        spec:
          serviceAccountName: acme-copy-token-role
          restartPolicy: Never
          containers:
          - name: acme-token-cloud-copy-job
            image: rclone/rclone
            args:
            - '--config=/.config/rclone/rclone.conf'
            - 'copy'
            - '$(STAGING_LOCATION)'
            - 'cc-public:$(UPLOAD_LOCATION)'
            env:
            - name: STAGING_LOCATION
              value: /data
            - name: UPLOAD_LOCATION
              value: /public/.well-known/acme-challenge
            volumeMounts:
            - name: data-dir
              mountPath: /data
            - name: rclone-conf-dir
              mountPath: /.config/rclone
          initContainers:
          - name: token-file-writer
            image: bitnami/kubectl
            command: ["/usr/bin/bash"]
            args: ["--", "/scripts/make-token-files.sh"]
            env:
            - name: STAGING_LOCATION
              value: /data
            volumeMounts:
            - name: data-dir
              mountPath: /data
            - name: script-dir
              mountPath: /scripts
          volumes:
          - name: data-dir
            emptyDir: {}
          - name: script-dir
            configMap:
              name: token-files-cm
          - name: rclone-conf-dir
            secret:
              secretName: public-upload-rclone-config
---
apiVersion: batch/v1
kind: CronJob
metadata:
 name: acme-token-cloud-cleanup-cron
 namespace: cert-manager
spec:
 schedule: "0 0 * * 1"
 concurrencyPolicy: Forbid
 jobTemplate:
   spec:
     template:
       metadata:
         labels:
           app: well-known-acme-token-cloud-delete
       spec:
         restartPolicy: Never
         containers:
         - name: acme-token-cloud-delete-job
           image: rclone/rclone
           args:
           - '--config=/.config/rclone/rclone.conf'
           - 'delete'
           - '--min-age=1d'
           - 'cc-public:$(UPLOAD_LOCATION)'
           env:
           - name: UPLOAD_LOCATION
             value: /public/.well-known/acme-challenge
           volumeMounts:
           - name: rclone-conf-dir
             mountPath: /.config/rclone
         volumes:
         - name: rclone-conf-dir
           secret:
             secretName: public-upload-rclone-config
